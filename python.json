{
    "ques":[
        "Q. What is the maximum possible length of an identifier?",
        "Q. Who developed the Python language?",
        "Q. In which year was the Python language developed?",
        "Q. In which language is Python written?",
        "Q. Which one of the following is the correct extension of the Python file?",
        "Q. In which year was the Python 3.0 version developed?",
        "Q. What do we use to define a block of code in Python language?",
        "Q. Which character is used in Python to make a single line comment?",
        "Q. Which of the following statements is correct regarding the object-oriented programming concept in Python?",
        "Q. What is the method inside the class in python language?",
        "Q. Which of the following declarations is incorrect?",
        "Q. Why does the name of local variables start with an underscore discouraged?",
        "Q. Which of the following is not a keyword in Python language?",
        "Q. Which of the following statements is correct for variable names in Python language?",
        "Q. Which of the following declarations is incorrect in python language?",
        "Q. Which of the following words cannot be a variable in python language?",
        "Q. Which of the following operators is the correct option for power(ab)?",
        "Q. Which one of the following has the same precedence level?",
        "Q. Which one of the following has the highest precedence in the expression?",
        "Q. Which of the following functions is a built-in function in python language",
        "Q. Which of the following is correctly evaluated for this function?",
        "Q. all([2,4,0,6])\nWhat will be Output?",
        "Q. any([5>8, 6>3, 3>1])\nWhat will be the Output?  ",
        "Q. The output to execute string.ascii_letters can also be obtained from:?",
        "Q. print(0xA + 0xB + 0xC)\nWhat will be output",
        "Q. Which of the following option is not a core data type in the python language?",
        "Q. What error will occur when you execute the following code?\nMANGO = APPLE",
        "Q. What happens when '2' == 2 is executed?",
        "Q. How many control statements python supports?",
        "Q. Which of the following arithmetic operators cannot be used with strings in python?"
    ],

    "opt":[
        "1. 16\n2. 32\n3. 64\n4. None of these",
        "1. Zim Den\n2. Guido van Rossum\n3. Niene Stom\n4. Wick van Rossum",
        "1. 1995\n2. 1972\n3. 1981\n4. 1989",
        "1. English\n2. PHP\n3. C\n4. None of the above",
        "1. .py\n2. .python\n3. .p\n4. None of these",
        "1. 2008\n2. 2000\n3. 2010\n4. 2005",
        "1. Key\n2. Brackets\n3. Indentation\n4. None of these",
        "1. /\n2. //\n3. #\n4. !",
        "1. Classes are real-world entities while objects are not real\n2. Objects are real-world entities while classes are not real\n3. Both objects and classes are real-world entities\n4. All of the above",
        "1. Object\n2. Function\n3. Attribute\n4. Argument",
        "1. _x = 2\n2. __x = 3\n3. __xyz__ = 5\n4. None of these",
        "1. To identify the variable\n2. It confuses the interpreter\n3. It indicates a private variable of a class\n4. None of these",
        "1. val\n2. raise\n3. try\n4. with",
        "1. All variable names must begin with an underscore.\n2. Unlimited length\n3. The variable name length is a maximum of 2.\n4. All of the above",
        "1. xyzp = 5,000,000\n2. x y z p = 5000 6000 7000 8000\n3. x,y,z,p = 5000, 6000, 7000, 8000\n4. x_y_z_p = 5,000,000",
        "1. _val\n2. val\n3. try\n4. _try_",
        "1. a ^ b\n2. a**b\n3. a ^ ^ b\n4. a ^ * b",
        "1. Division, Power, Multiplication, Addition and Subtraction\n2. Division and Multiplication\n3. Subtraction and Division\n4. Power and Division",
        "1. Division\n2. Substraction\n3. Power\n4. Parentheses",
        "1. val()\n2. print()\n3. random()\n4. None of these",
        "1. (x**y) / z\n2. (x / y) * z\n3. (x**y) % z\n4. (x / y) / z",
        "1. False\n2. True\n3. 0\n4. Invalid Code",
        "1. False\n2. True\n3. 0\n4. Invalid Code",
        "1. character\n2. ascii_lowercase_string.digits\n3. lowercase_string.upercase\n4. ascii_lowercase+string.ascii_upercase",
        "1. 33\n2. 63\n3. 0xA + 0xB + 0xC\n4. None of these",
        "1. Dictionary\n2. Lists\n3. Class\n4. All of the above",
        "1. NameError\n2. SyntaxError\n3. TypeError\n4. ValueError",
        "1. Flase\n2. True\n3. ValueError Occur\n4. TypeError Occur",
        "1. Four\n2. Five\n3. Three\n4. None of these",
        "1. +\n2. -\n3. *\n4. All of them"
    ],
    
    "ans":[4, 2, 4, 3, 1, 1, 3, 3, 2, 2, 4, 3, 1, 2, 2, 3, 2, 2, 4, 2, 3, 1, 2, 4, 1, 3, 1, 1, 3, 2]
}